setwd("~/Documents/GitHub/Spring2018/Project_Starter_Codes/doc")
if(!require("EBImage")){
source("https://bioconductor.org/biocLite.R")
biocLite("EBImage")
}
if(!require("gbm")){
install.packages("gbm")
}
library("EBImage")
library("gbm")
experiment_dir <- "/Users/wcheng/Desktop/project-2-/" # Modify this to where the pet images are located
img_train_dir  <- paste(experiment_dir, "data/train/", sep="")
img_test_dir   <- paste(experiment_dir, "data/test/", sep="")
sift_dir <- paste(experiment_dir,"data/train-features", sep = "")
run.feature.train <- F # process features for training set
run.test          <- T # run evaluation on an independent test set
run.feature.test  <- F # process features for test set
run.sift <- F
run.GBM <- F
run.RF = F
run.NN = F
run.Ada = T
run.XGB = F
run.SVM = F
load("../data/split_data/train/train_label.Rdata")
load("../data/split_data/test/test_label.Rdata")
load("../data/split_data/train/train_HOG.Rdata")
train_data <- train_HOG[,-1]
test_data <- test_HOG[,-1]
load("../data/split_data/train/train_HOG.Rdata")
load("../data/split_data/test/test_HOG.Rdata")
train_data <- train_HOG[,-1]
test_data <- test_HOG[,-1]
source("../lib/train.R")
source("../lib/test.R")
tm_train <- NA
MODEL <- NULL
if(run.GBM){
tm_train <- system.time(MODEL <- train(train_data, train_label, run.GBM=T))
}
if(run.RF){
tm_train <- system.time(MODEL <- train(train_data, train_label, run.RF=T))
}
if(run.Ada){
tm_train <- system.time(MODEL <- train(train_data, train_label, run.Ada=T))
}
if(run.NN){
tm_train <- system.time(MODEL <- train(train_data, train_label, run.NN=T))
}
if(run.XGB){
tm_train <- system.time(MODEL <- train(train_data, train_label, run.XGB=T))
}
if(run.SVM){
train_data <- train_HOG
test_data <- test_HOG
tm_train <- system.time(MODEL <- train(train_data, train_label, run.SVM=T))
}
cat("Time for training model=", tm_train[1], "s \n")
198/60
tm_train
738/60
if(!require("EBImage")){
source("https://bioconductor.org/biocLite.R")
biocLite("EBImage")
}
if(!require("gbm")){
install.packages("gbm")
}
library("EBImage")
library("gbm")
experiment_dir <- "/Users/wcheng/Desktop/project-2-/" # Modify this to where the pet images are located
img_train_dir  <- paste(experiment_dir, "data/train/", sep="")
img_test_dir   <- paste(experiment_dir, "data/test/", sep="")
sift_dir <- paste(experiment_dir,"data/train-features", sep = "")
run.feature.train <- F # process features for training set
run.test          <- T # run evaluation on an independent test set
run.feature.test  <- F # process features for test set
run.sift <- F
run.GBM <- F
run.RF = F
run.NN = F
run.Ada = T
run.XGB = F
run.SVM = F
run.feature.train <- F # process features for training set
run.test          <- T # run evaluation on an independent test set
run.feature.test  <- F # process features for test set
run.sift <- F
run.GBM <- F
run.RF = F
run.NN = F
run.Ada = F
run.XGB = F
run.SVM = T
load("../data/split_data/train/train_label.Rdata")
load("../data/split_data/test/test_label.Rdata")
load("../data/split_data/train/train_HOG.Rdata")
load("../data/split_data/test/test_HOG.Rdata")
train_HOG <- train_HOG[,-1]
test_HOG <- test_HOG[,-1]
source("../lib/train.R")
source("../lib/test.R")
tm_train <- NA
MODEL <- NULL
if(run.GBM){
tm_train <- system.time(MODEL <- train(train_data, train_label, run.GBM=T))
}
if(run.RF){
tm_train <- system.time(MODEL <- train(train_data, train_label, run.RF=T))
}
if(run.Ada){
tm_train <- system.time(MODEL <- train(train_data, train_label, run.Ada=T))
}
if(run.NN){
tm_train <- system.time(MODEL <- train(train_data, train_label, run.NN=T))
}
if(run.XGB){
tm_train <- system.time(MODEL <- train(train_data, train_label, run.XGB=T))
}
if(run.SVM){
train_data <- train_HOG
test_data <- test_HOG
tm_train <- system.time(MODEL <- train(train_data, train_label, run.SVM=T))
}
tm_test <- NA
if(run.test){
tm_test <- system.time(pred_test <- test(MODEL, test_data, test.GBM = run.GBM,
test.RF = run.RF, test.NN = run.NN,
test.SVM = run.SVM, test.Ada = run.Ada, test.XGB = run.XGB))
save(pred_test, file = "../output/pred_test.RData")
}
confusion<-function(a,b){
tbl <- table(a, b)
mis <- 1 - sum(diag(tbl))/sum(tbl)
list(table = tbl, misclass.prob = mis)
}
confusion(test_label ==0, pred_test==0)
run.feature.train <- F # process features for training set
run.test          <- T # run evaluation on an independent test set
run.feature.test  <- F # process features for test set
run.sift <- F
run.GBM <- F
run.RF = F
run.NN = F
run.Ada = F
run.XGB = T
run.SVM = F
load("../data/split_data/train/train_LBP.Rdata")
load("../data/split_data/test/test_LBP.Rdata")
train_data <- train_LBP[,-1]
test_data <- test_LBP[,-1]
tm_train <- NA
MODEL <- NULL
if(run.GBM){
tm_train <- system.time(MODEL <- train(train_data, train_label, run.GBM=T))
}
if(run.RF){
tm_train <- system.time(MODEL <- train(train_data, train_label, run.RF=T))
}
if(run.Ada){
tm_train <- system.time(MODEL <- train(train_data, train_label, run.Ada=T))
}
if(run.NN){
tm_train <- system.time(MODEL <- train(train_data, train_label, run.NN=T))
}
if(run.XGB){
tm_train <- system.time(MODEL <- train(train_data, train_label, run.XGB=T))
}
if(run.SVM){
train_data <- train_HOG
test_data <- test_HOG
tm_train <- system.time(MODEL <- train(train_data, train_label, run.SVM=T))
}
tm_test <- NA
if(run.test){
tm_test <- system.time(pred_test <- test(MODEL, test_data, test.GBM = run.GBM,
test.RF = run.RF, test.NN = run.NN,
test.SVM = run.SVM, test.Ada = run.Ada, test.XGB = run.XGB))
save(pred_test, file = "../output/pred_test.RData")
}
confusion<-function(a,b){
tbl <- table(a, b)
mis <- 1 - sum(diag(tbl))/sum(tbl)
list(table = tbl, misclass.prob = mis)
}
confusion(test_label ==0, pred_test==0)
load("../data/split_data/train/train_HOG.Rdata")
load("../data/split_data/test/test_HOG.Rdata")
train_data <- train_HOG[,-1]
test_data <- test_HOG[,-1]
tm_train <- NA
MODEL <- NULL
if(run.GBM){
tm_train <- system.time(MODEL <- train(train_data, train_label, run.GBM=T))
}
if(run.RF){
tm_train <- system.time(MODEL <- train(train_data, train_label, run.RF=T))
}
if(run.Ada){
tm_train <- system.time(MODEL <- train(train_data, train_label, run.Ada=T))
}
if(run.NN){
tm_train <- system.time(MODEL <- train(train_data, train_label, run.NN=T))
}
if(run.XGB){
tm_train <- system.time(MODEL <- train(train_data, train_label, run.XGB=T))
}
if(run.SVM){
train_data <- train_HOG
test_data <- test_HOG
tm_train <- system.time(MODEL <- train(train_data, train_label, run.SVM=T))
}
tm_test <- NA
if(run.test){
tm_test <- system.time(pred_test <- test(MODEL, test_data, test.GBM = run.GBM,
test.RF = run.RF, test.NN = run.NN,
test.SVM = run.SVM, test.Ada = run.Ada, test.XGB = run.XGB))
save(pred_test, file = "../output/pred_test.RData")
}
confusion<-function(a,b){
tbl <- table(a, b)
mis <- 1 - sum(diag(tbl))/sum(tbl)
list(table = tbl, misclass.prob = mis)
}
confusion(test_label ==0, pred_test==0)
cat("Time for training model=", tm_train[1], "s \n")
load("../data/split_data/train/train_color.Rdata")
load("../data/split_data/test/test_color.Rdata")
train_data <- train_HOG[,-1]
load("../data/split_data/train/train_color.Rdata")
load("../data/split_data/test/test_color.Rdata")
train_data <- train_colof[,-1]
test_data <- test_colof[,-1]
train_data <- train_color[,-1]
test_data <- test_color[,-1]
tm_train <- NA
MODEL <- NULL
if(run.GBM){
tm_train <- system.time(MODEL <- train(train_data, train_label, run.GBM=T))
}
if(run.RF){
tm_train <- system.time(MODEL <- train(train_data, train_label, run.RF=T))
}
if(run.Ada){
tm_train <- system.time(MODEL <- train(train_data, train_label, run.Ada=T))
}
if(run.NN){
tm_train <- system.time(MODEL <- train(train_data, train_label, run.NN=T))
}
if(run.XGB){
tm_train <- system.time(MODEL <- train(train_data, train_label, run.XGB=T))
}
if(run.SVM){
train_data <- train_HOG
test_data <- test_HOG
tm_train <- system.time(MODEL <- train(train_data, train_label, run.SVM=T))
}
tm_test <- NA
if(run.test){
tm_test <- system.time(pred_test <- test(MODEL, test_data, test.GBM = run.GBM,
test.RF = run.RF, test.NN = run.NN,
test.SVM = run.SVM, test.Ada = run.Ada, test.XGB = run.XGB))
save(pred_test, file = "../output/pred_test.RData")
}
confusion<-function(a,b){
tbl <- table(a, b)
mis <- 1 - sum(diag(tbl))/sum(tbl)
list(table = tbl, misclass.prob = mis)
}
confusion(test_label ==0, pred_test==0)
cat("Time for training model=", tm_train[1], "s \n")
load("../output/sift_feature_kmeans_model_200.RData")
load("../output/sift_features_200.RData")
load("/Users/wcheng/Desktop/Spring 2018/data science/project-2-predictive-modelling-group-6/data/split_data/train/train_sift.Rdata")
View(train_sift)
load("../data/split_data/train/train_sift.Rdata")
load("../data/split_data/test/test_sift.Rdata")
train_data <- train_sift
test_data <- test_sift
tm_train <- NA
MODEL <- NULL
if(run.GBM){
tm_train <- system.time(MODEL <- train(train_data, train_label, run.GBM=T))
}
if(run.RF){
tm_train <- system.time(MODEL <- train(train_data, train_label, run.RF=T))
}
if(run.Ada){
tm_train <- system.time(MODEL <- train(train_data, train_label, run.Ada=T))
}
if(run.NN){
tm_train <- system.time(MODEL <- train(train_data, train_label, run.NN=T))
}
if(run.XGB){
tm_train <- system.time(MODEL <- train(train_data, train_label, run.XGB=T))
}
if(run.SVM){
train_data <- train_HOG
test_data <- test_HOG
tm_train <- system.time(MODEL <- train(train_data, train_label, run.SVM=T))
}
tm_test <- NA
if(run.test){
tm_test <- system.time(pred_test <- test(MODEL, test_data, test.GBM = run.GBM,
test.RF = run.RF, test.NN = run.NN,
test.SVM = run.SVM, test.Ada = run.Ada, test.XGB = run.XGB))
save(pred_test, file = "../output/pred_test.RData")
}
confusion<-function(a,b){
tbl <- table(a, b)
mis <- 1 - sum(diag(tbl))/sum(tbl)
list(table = tbl, misclass.prob = mis)
}
confusion(test_label ==0, pred_test==0)
cat("Time for training model=", tm_train[1], "s \n")
